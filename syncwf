#!/bin/bash

current_dir="`dirname $0`"
source $current_dir/lib/const.sh

OPTIND=1
usage() {
    echo "usage: $CMD -gp [-f] [-n] [-o rsync-options [-a]] [name/bundleid] "
    exit 0
}

get=false
put=false
confirm=true
options="-av --update  --delete --exclude=.*"
dryrun=false
gitignore=".gitignore"
append=false
option_enable=false
customer_options=""
if [[ -f "$gitignore" ]]; then
    options+=" --exclude-from=$gitignore"
fi

while getopts "hngpo:a" opt
do
    case $opt in
        h)
            usage
            ;;
        a)
            append=true
            ;;
        g)  
            get=true
            ;;
        p) 
            put=true
            ;;
        o) 
            customer_options="$OPTARG"
            option_enable=true
            ;;
        n)
            dryrun=true
            ;;
        \?)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if $option_enable; then
    if $append; then
        options="$options $customer_options"
    else
        options="$customer_options"
    fi
fi


if ! $get && ! $put ; then
    echo "$CMD: Neither -g nor -p be selected, exiting..."
    exit -1
fi

search_word="$1"
if target_dir="`findwf \"$search_word\"`"; then  
    :
elif [ -n "$search_word" ]; then
    echo "$CMD can't find workflow"
    exit -1
else
    read line
    target_dir="$line"
    if [ ! -d "$target_dir" ];
    then
        echo "$CMD can't find workflow"
        exit -1
    fi
fi

if $dryrun; then
    options+=" -n"
fi

if $confirm; then
    if $get && $put; then 
        msg= "Sync content between: `pwd` and $target_dir"
    elif $get; then
        msg="Copy content from $target_dir to `pwd`"
    elif $put; then
        msg="Copy content from `pwd` to $target_dir"
    fi
    read -p "$CMD: $msg with option \"$options\", continue? [y/n]" -n 1 -r reply
    echo
    if [[ ! $reply =~ [yY] ]]; then
        exit -1
    fi
fi

sync_folder() {
    rsync $options "$1" "$2"
}


if $put; then
    sync_folder "./" "$target_dir"
fi

if $get; then
    sync_folder "$target_dir" "./"
fi

